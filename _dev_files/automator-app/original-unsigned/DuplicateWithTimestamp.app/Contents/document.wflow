<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>523</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Run Shell Script</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>#!/bin/bash

# Set PATH to include common locations for tools
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:$PATH"

# If Homebrew is installed, add its paths
if [ -f /opt/homebrew/bin/brew ]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
elif [ -f /usr/local/bin/brew ]; then
    eval "$(/usr/local/bin/brew shellenv)"
fi

# Check if fswatch is installed
if ! command -v fswatch &amp;&gt; /dev/null; then
    log_message "fswatch is not installed. Installing fswatch..."
    brew install fswatch
fi

# Enable error handling
set -e

# Function to log messages
log_message() {
    echo "$(date): $1" &gt;&gt; "$HOME/automator_workflow_debug.log"
}

log_message "Starting automator workflow..."

# Set the Resources directory path
RESOURCES_DIR="/Applications/DuplicateWithTimestamp.app/Contents/Resources"
log_message "Resources directory: $RESOURCES_DIR"

# Create ~/.local/bin/ if it doesn't exist
mkdir -p "$HOME/.local/bin"
log_message "Created ~/.local/bin/ directory"

# Function to copy file if it exists
copy_file() {
    local file="$1"
    if [ -f "$RESOURCES_DIR/$file" ]; then
        cp "$RESOURCES_DIR/$file" "$HOME/.local/bin/"
        chmod +x "$HOME/.local/bin/$file"
        log_message "Copied $file to ~/.local/bin/"
    else
        log_message "Error: $file not found in $RESOURCES_DIR"
    fi
}

# Copy necessary files
copy_file "DuplicateWithTimestamp.sh"
copy_file "DuplicateFileManager.sh"

# Function to update PATH in a file if not already present
update_path_in_file() {
    local file="$1"
    if ! grep -q 'export PATH="$HOME/.local/bin:$PATH"' "$file"; then
        echo 'export PATH="$HOME/.local/bin:$PATH"' &gt;&gt; "$file"
        log_message "Updated PATH in $file"
    else
        log_message "PATH already updated in $file"
    fi
}

# Update PATH if necessary
if [[ ":$PATH:" != *":$HOME/.local/bin:"* ]]; then
    update_path_in_file "$HOME/.bash_profile"
    update_path_in_file "$HOME/.zshrc"
    export PATH="$HOME/.local/bin:$PATH"
    log_message "Updated PATH in current session"
else
    log_message "PATH already includes ~/.local/bin"
fi

# Verify files are copied and executable
if [ -x "$HOME/.local/bin/DuplicateWithTimestamp.sh" ] &amp;&amp; [ -x "$HOME/.local/bin/DuplicateFileManager.sh" ]; then
    log_message "Verified: Scripts are copied and executable"
else
    log_message "Error: Scripts are not properly copied or not executable"
fi

# Test execution of copied scripts
if command -v DuplicateWithTimestamp.sh &amp;&gt; /dev/null &amp;&amp; command -v DuplicateFileManager.sh &amp;&gt; /dev/null; then
    log_message "Verified: Scripts are accessible in PATH"
else
    log_message "Error: Scripts are not accessible in PATH"
fi


# Log the current PATH
log_message "Current PATH: $PATH"

# Find the DuplicateFileManager.sh script
MANAGER_SCRIPT="$HOME/.local/bin/DuplicateFileManager.sh"

if [ ! -f "$MANAGER_SCRIPT" ]; then
    log_message "Error: DuplicateFileManager.sh not found at $MANAGER_SCRIPT"
    osascript -e 'display notification "DuplicateFileManager.sh not found. Check installation." with title "Error" sound name "Basso"'
    exit 1
fi

# Run the DuplicateFileManager.sh script with the toggle argument
log_message "Running DuplicateFileManager.sh toggle"
"$MANAGER_SCRIPT" toggle

# Check the exit status
if [ $? -eq 0 ]; then
    log_message "DuplicateFileManager.sh executed successfully"
    osascript -e 'display notification "DuplicateWithTimestamp service toggled successfully" with title "Service Toggled"'
else
    log_message "Error: DuplicateFileManager.sh failed to execute"
    osascript -e 'display notification "Failed to toggle DuplicateWithTimestamp service. Check logs for details." with title "Error" sound name "Basso"'
    exit 1
fi

log_message "Open, check for required files, install if needed and run completed"






#!/bin/bash



log_message "Automator workflow completed."
</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>1</integer>
					<key>shell</key>
					<string>/bin/bash</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>6065E67A-8059-42F9-AFBD-1D4514829900</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Script</string>
					<string>Command</string>
					<string>Run</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>BE60B082-EA76-4DDD-8D8F-4C3D25A8964C</string>
				<key>UUID</key>
				<string>C8794601-2EF2-43EB-8AD1-C2EEB025EEA6</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>623.750000:252.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.application</string>
	</dict>
</dict>
</plist>
